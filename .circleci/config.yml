# This config is equivalent to both the '.circleci/extended/orb-free.yml' and the base '.circleci/config.yml'
version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@7.2.0
  aws-ecs: circleci/aws-ecs@2.2.1

workflows:
  build_and_push_image:
    jobs:
      - aws-ecr/build-and-push-image:
          account-url: AWS_ECR_ACCOUNT_URL
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          create-repo: false
          dockerfile: Dockerfile
          path: .
          region: AWS_REGION
          repo: myinsn-backend
          tag: "$CIRCLE_SHA1"
          filters:
            branches:
              only:
                - develop
      - aws-ecs/deploy-service-update:
          requires:
            - aws-ecr/build-and-push-image # only run this job once aws-ecr/build-and-push-image has completed
          family: "myinsn-backend-dev"
          cluster-name: "myinsn-backend-dev"
          container-image-name-updates: "container=app,tag=${CIRCLE_SHA1}"
  build_and_push_image_prod:
    jobs:
      - aws-ecr/build-and-push-image:
          account-url: AWS_ECR_ACCOUNT_URL
          aws-access-key-id: AWS_ACCESS_KEY_ID_PROD
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY_PROD
          create-repo: false
          dockerfile: Dockerfile
          path: .
          region: AWS_REGION
          repo: myinsn-backend
          tag: "$CIRCLE_SHA1"
          filters:
            branches:
              only:
                - master
      - aws-ecs/deploy-service-update:
          requires:
            - aws-ecr/build-and-push-image # only run this job once aws-ecr/build-and-push-image has completed
          aws-access-key-id: AWS_ACCESS_KEY_ID_PROD
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY_PROD
          family: "myinsn-backend-prod"
          cluster-name: "myinsn-backend-prod"
          container-image-name-updates: "container=app,tag=${CIRCLE_SHA1}"